{"version":3,"sources":["services/persons.js","components/Delete.js","components/Filter.js","components/Form.js","components/Notification.js","App.js","index.js"],"names":["baseUrl","axios","get","newObject","post","id","put","delete","Delete","person","persons","setPersons","setConfMessage","className","onClick","ID","window","confirm","name","personService","then","response","catch","error","console","log","newList","filter","Filter","newFilter","filteredList","toLowerCase","indexOf","map","key","number","Form","newName","newNumber","setNewName","setNewNumber","onSubmit","event","preventDefault","nameObject","newPerson","find","data","concat","String","value","onChange","target","type","Notification","message","setMessage","setTimeout","includes","App","useState","setNewFilter","confMessage","useEffect","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4cbc5133.chunk.js","sourcesContent":["import axios from \"axios\";\r\nconst baseUrl = \"/api/persons\";\r\n\r\nconst getAll = () => {\r\n  return axios.get(baseUrl);\r\n};\r\n\r\nconst create = newObject => {\r\n  return axios.post(baseUrl, newObject);\r\n};\r\n\r\nconst update = (id, newObject) => {\r\n  return axios.put(`${baseUrl}/${id}`, newObject);\r\n};\r\n\r\nconst deletePerson = id => {\r\n  return axios.delete(`${baseUrl}/${id}`);\r\n};\r\n\r\nexport default { getAll, create, update, deletePerson };\r\n","import React from \"react\";\r\nimport personService from \"../services/persons\";\r\n\r\nconst Delete = ({ person, persons, setPersons, setConfMessage }) => {\r\n  const handleDeleteClick = () => {\r\n    const ID = person.id;\r\n    if (window.confirm(`Delete ${person.name} ?`)) {\r\n      personService\r\n        .deletePerson(person.id)\r\n        .then(response => {})\r\n        .catch(error => {\r\n          console.log(error);\r\n          setConfMessage(\r\n            `${person.name} has already been deleted from the server`\r\n          );\r\n        });\r\n\r\n      const newList = persons.filter(person => person.id !== ID);\r\n      setPersons(newList);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <button className=\"btn btn-danger btn-sm \" onClick={handleDeleteClick}>\r\n        Delete\r\n      </button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Delete;\r\n","import React from \"react\";\r\nimport Delete from \"./Delete.js\";\r\nconst Filter = ({ persons, newFilter, setPersons, setConfMessage }) => {\r\n  const filteredList = persons.filter(\r\n    person => person.name.toLowerCase().indexOf(newFilter.toLowerCase()) !== -1\r\n  );\r\n  return (\r\n    <div className=\"container\">\r\n      <h3 className=\"display-4\">Numbers</h3>\r\n      <table className=\"table table-bordered table-hover\">\r\n        <thead className=\"thead-light\">\r\n          <tr className=\"d-flex\">\r\n            <th className=\"col-4\">Name</th>\r\n            <th className=\"col-4\">Number</th>\r\n            <th className=\"col-4\">Delete?</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {filteredList.map(person => (\r\n            <tr key={person.id} className=\"d-flex\">\r\n              <td className=\"col-4\">{person.name} </td>\r\n              <td className=\"col-4\">{person.number}</td>\r\n              <td className=\"col-4 \">\r\n                <Delete\r\n                  person={person}\r\n                  persons={persons}\r\n                  setPersons={setPersons}\r\n                  setConfMessage={setConfMessage}\r\n                />\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import React from \"react\";\r\nimport personService from \"../services/persons\";\r\n\r\nconst Form = ({\r\n  newName,\r\n  newNumber,\r\n  setNewName,\r\n  setNewNumber,\r\n  persons,\r\n  setPersons,\r\n  setConfMessage\r\n}) => {\r\n  const handleNameChange = event => {\r\n    setNewName(event.target.value);\r\n  };\r\n\r\n  const handleNumberChange = event => {\r\n    setNewNumber(event.target.value);\r\n  };\r\n\r\n  const AddPerson = event => {\r\n    event.preventDefault();\r\n    const nameObject = {\r\n      name: newName,\r\n      number: newNumber\r\n    };\r\n\r\n    const newPerson = persons.find(person => person.name === nameObject.name);\r\n\r\n    if (newPerson) {\r\n      if (\r\n        window.confirm(\r\n          `${newName} is already in the phonebook, would you like to replace their number with a new one?`\r\n        )\r\n      ) {\r\n        personService\r\n          .update(newPerson.id, nameObject)\r\n          .then(response =>\r\n            setPersons(\r\n              persons.map(person =>\r\n                person.id !== newPerson.id ? person : response.data\r\n              )\r\n            )\r\n          );\r\n\r\n        setConfMessage(`Added new number to ${nameObject.name}`);\r\n      }\r\n      return;\r\n    }\r\n\r\n    personService\r\n      .create(nameObject)\r\n      .then(response => {\r\n        setPersons(persons.concat(response.data));\r\n        setConfMessage(`Added ${nameObject.name}`);\r\n      })\r\n      .catch(error => setConfMessage(String(error)));\r\n\r\n    setNewName(\"\");\r\n    setNewNumber(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h2 className=\"display-4\">Add To Phonebook</h2>\r\n      <form className=\"form-group\" onSubmit={AddPerson}>\r\n        <div>\r\n          Name:{\" \"}\r\n          <input\r\n            className=\"input-group mb-3 max-width: 567px\"\r\n            value={newName}\r\n            onChange={handleNameChange}\r\n          />\r\n        </div>\r\n        <div>\r\n          Number:{\" \"}\r\n          <input\r\n            className=\"input-group mb-3\"\r\n            value={newNumber}\r\n            onChange={handleNumberChange}\r\n          />\r\n        </div>\r\n        <div>\r\n          <button className=\"btn btn-primary\" type=\"submit\">\r\n            Add Person\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\n\r\nconst Notification = ({ message, setMessage }) => {\r\n  if (message === null) {\r\n    return null;\r\n  }\r\n  setTimeout(() => {\r\n    setMessage(null);\r\n  }, 4000);\r\n\r\n  if (message.includes(\"Added\")) {\r\n    return (\r\n      <>\r\n        <p className=\"alert alert-success mb-3\">{message}</p>\r\n      </>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className=\"container\">\r\n        <p className=\"alert alert-danger\">{message}</p>\r\n      </div>\r\n    );\r\n  }\r\n};\r\nexport default Notification;\r\n","import React, { useState, useEffect } from \"react\";\nimport Filter from \"./components/Filter.js\";\nimport Form from \"./components/Form.js\";\nimport personService from \"./services/persons\";\nimport Notification from \"./components/Notification\";\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [newFilter, setNewFilter] = useState(\"\");\n  const [confMessage, setConfMessage] = useState(null);\n\n  useEffect(() => {\n    personService.getAll().then(response => {\n      setPersons(response.data);\n    });\n  }, []);\n\n  const handleFilterChange = event => {\n    setNewFilter(event.target.value);\n  };\n\n  return (\n    <div>\n      <Notification message={confMessage} setMessage={setConfMessage} />\n      <h1 className=\"display-3 text-center\">Phonebook</h1>\n\n      <Form\n        newName={newName}\n        newNumber={newNumber}\n        setNewName={setNewName}\n        setNewNumber={setNewNumber}\n        persons={persons}\n        setPersons={setPersons}\n        setConfMessage={setConfMessage}\n      />\n      <div className=\"container \">\n        Filter: <input value={newFilter} onChange={handleFilterChange} />\n      </div>\n      <Filter\n        persons={persons}\n        newFilter={newFilter}\n        setPersons={setPersons}\n        setConfMessage={setConfMessage}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport axios from \"axios\";\n\naxios.get(\"api/persons\").then(response => {\n  const persons = response.data;\n  ReactDOM.render(<App persons={persons} />, document.getElementById(\"root\"));\n});\n"],"sourceRoot":""}